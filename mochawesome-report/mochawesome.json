{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-06-09T22:29:41.034Z",
    "end": "2023-06-09T22:29:54.763Z",
    "duration": 13729,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ea5b4633-7dde-4889-ae58-018965421184",
      "title": "",
      "fullFile": "C:\\Users\\Jonathan C\\Documents\\selenium\\test\\anuncios.js",
      "file": "\\test\\anuncios.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "858c4e7f-753a-4acb-a714-a59eb1b31311",
          "title": "anuncios",
          "fullFile": "C:\\Users\\Jonathan C\\Documents\\selenium\\test\\anuncios.js",
          "file": "\\test\\anuncios.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfull",
              "fullTitle": "anuncios successfull",
              "timedOut": false,
              "duration": 13714,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"chrome\").build()\n//navigate\nawait driver.get(\"http://192.168.12.160:8096\")\nawait driver.findElement(By.id(\"username\")).sendKeys(\"jesus.cervantes\")\nawait driver.findElement(By.id(\"password\")).sendKeys(\"Kurax2023$$\", Key.RETURN)\n       \nawait driver.get(\"http://192.168.12.160:8096/?sec_id=anuncios&sub_sec_id=anuncios\")\nawait driver.findElement(By.id(\"anuncios_dia_6\")).click() \nawait driver.findElement(By.id(\"anuncios_texto\")).sendKeys(\"Lorem Ipsum @@**I=VR\"); \n\n//fechas\nlet fromDateBox = driver.findElement(By.id(\"anuncios_fecha_desde\"));\nawait driver.executeScript('arguments[0].removeAttribute(\\\"readonly\\\")', fromDateBox);    \nawait fromDateBox.clear();\nawait fromDateBox.sendKeys(\"09-06-2022\")\nlet ToDateBox = driver.findElement(By.id(\"anuncios_fecha_hasta\"));\nawait driver.executeScript('arguments[0].removeAttribute(\\\"readonly\\\")', ToDateBox);    \nawait ToDateBox.clear();\nawait ToDateBox.sendKeys(\"09-06-2022\");\n    \n     \n//select element type\nconst selectElement = await driver.findElement(By.id('anuncios_tipo_archivo'))\nconst select = new Select(selectElement)\nawait select.selectByIndex(1)\n\n       // await driver.findElement(By.id('anuncios_check_image_multiple')).click()\n       // await driver.findElement(By.id('btn_buscar_anuncio_imagen')).click()\n//IWebElement elemen await driver.findElement(By.id('btn_buscar_anuncio_imagen'))t =\n//await audioAdd.sendKeys(\"firm.png\")\n\nawait driver.findElement(By.id('anuncios_tiempo_anuncio')).sendKeys('02')\n//horass\nawait driver.findElement(By.id('anuncios_horario_desde')).sendKeys('1525')\nawait driver.findElement(By.id('anuncios_horario_hasta')).sendKeys('1527')\n//select grupo anunicios\nconst selectElement2 = await driver.findElement(By.id('anuncios_grupo_select_filtro'))\nconst select2 = new Select(selectElement2)\nawait select2.selectByVisibleText('at-sistemas')\nconst mainWindowHandle = await driver.getWindowHandle(); // Obtener el identificador de la ventana principal\n \n// Realizar una acción que provoque la aparición del modal o ventana emergente\n       await driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n\n// Esperar a que aparezca el modal o ventana emergente\nawait driver.wait(async function () { \n  const allWindowHandles = await driver.getAllWindowHandles(); // Obtener todos los identificadores de ventana\n  return allWindowHandles.length > 1; // Comprobar si se abrió una nueva ventana\n}, 5000, 'El modal o ventana emergente se ha abierto');\n\nconst allWindowHandles = await driver.getAllWindowHandles(); // Obtener todos los identificadores de ventana\n\n// Cambiar al identificador de ventana del modal o ventana emergente\nconst modalWindowHandle = allWindowHandles.find(handle => handle !== mainWindowHandle);\nawait driver.switchTo().window(modalWindowHandle);\n\n// Realizar las comprobaciones necesarias en el modal o ventana emergente\nconst modalTitleElement = await driver.findElement(By.css('.modal-title'));\nconst modalTitle = await modalTitleElement.getText();\n// assert.equal(modalTitle, 'Título del Modal'); // Verificar el título del modal\n\n// Cerrar el modal o ventana emergente y volver a la ventana principal\n// await driver.close();\nawait driver.switchTo().window(mainWindowHandle);",
              "err": {
                "message": "TimeoutError: El modal o ventana emergente se ha abierto\nWait timed out after 5032ms",
                "estack": "TimeoutError: El modal o ventana emergente se ha abierto\nWait timed out after 5032ms\n    at C:\\Users\\Jonathan C\\Documents\\selenium\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:17\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "38724c15-6f84-4d14-9819-a27a971113da",
              "parentUUID": "858c4e7f-753a-4acb-a714-a59eb1b31311",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "38724c15-6f84-4d14-9819-a27a971113da"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 500000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 500000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}